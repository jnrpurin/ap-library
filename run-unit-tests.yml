name: Run Unit Tests with Coverage

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore ./library-management-app/backend/LibraryManagementApp.sln

      - name: Build solution
        run: dotnet build ./library-management-app/backend/LibraryManagementApp.sln --configuration Release --no-restore

      # Create the files into bin/Release/net9.0/
      - name: Run unit tests with coverage
        run: >
          dotnet test ./library-management-app/backend/UnitTests/UnitTests.csproj
          --configuration Release
          --no-build
          /p:CollectCoverage=true
          /p:CoverletOutput=./library-management-app/backend/UnitTests/bin/Release/net9.0/coverage/
          /p:CoverletOutputFormat=cobertura
          /p:ExcludeByFile="**/Migrations/*"
          /p:Threshold=70

      - name: List coverage output
        run: ls -R ./library-management-app/backend/UnitTests/bin/Release/net9.0/coverage/

      # Publish test results
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./library-management-app/backend/UnitTests/bin/Release/net9.0/coverage/
          if-no-files-found: warn

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      # Create the HTML report using file cobertura.xml
      - name: Create coverage report
        run: >
          reportgenerator
          -reports:./library-management-app/backend/UnitTests/bin/Release/net9.0/coverage/coverage.cobertura.xml
          -targetdir:./library-management-app/backend/UnitTests/bin/Release/net9.0/coverage/CoverageReport
          -reporttypes:Html
        env:
          PATH: $PATH:/home/runner/.dotnet/tools

      # Publish the new report as an artefact
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./library-management-app/backend/UnitTests/bin/Release/net9.0/coverage/CoverageReport
          if-no-files-found: warn
